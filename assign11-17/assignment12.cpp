/****************************************************************
* Program:
*    Assignment 12, Catching Exceptions
*    Brother Sloan, CS165
* Author:
*    Larry Dewey
* Summary:
*    This program is designed to oen a file, and try to read a
*    line from that file. If there are errors, it is designed 
*    to fix them.
*
*    Estimated: ? hrs
*    Actual:    3.5 hrs
****************************************************************/ 

#include <iostream>
#include <iomanip>
#include <string>
#include <cstring>
#include <string>
#include <fstream>
using namespace std;

/***************************************************************
 * readData(0 grabs the file, and tries to open it. If something
 * goes wrong, it will throw an exception.
 ***************************************************************/
string readData(const string &fileName) throw (string, bool, int)
{
   // missing file case
   if (fileName.size() == 0)
      throw true; // "ERROR: No filename specified\n"

   // attempt to open the file
   ifstream fin(fileName.c_str());
   if (fin.fail())
      throw fileName; //"ERROR: Invalid filename \"" << s << "\"\n"

   // attempt to read the data
   string data;
   getline(fin, data);
   bool moreData = !fin.eof();
   fin.close();

   // empty file
   if (data.size() == 0)
      throw 0; // "ERROR: The file was empty\n"

   // message too long
   if (data.size() > 140)
      throw 1; // "ERROR: The message exceeded 140 characters\n"

   // more than one line of data
   if (moreData)
      throw 2; // "ERROR: The message was longer than 1 line\n"

   // success
   return data;
}

/*****************************************************************
 * main() prompts the user for a file name to open, and then 
 * sends that name to readData() to try and open, and read, the 
 * file. main() then will catch the throws generated by readData().
 *****************************************************************/
int main()
{
   string fileName;
   cout << "What is the filename? ";
   getline(cin, fileName);

   try
   {
      readData(fileName);
      cout << "The important fact: \"Don't forget to grade the papers!\"\n";
   }
   catch (string fileExists)
   {
      cout << "ERROR: Invalid filename \"" << fileExists << "\"\n";
   }
   catch (bool fileEmpty)
   {
      cout << "ERROR: No filename specified\n";
   }
   catch (int errorCodes)
   {
      switch (errorCodes)
      {
         case 0:
            cout << "ERROR: The file was empty\n";
            break;
         case 1:
            cout << "ERROR: The message exceeded 140 characters\n";
            break;
         case 2:
            cout << "ERROR: The message was longer than 1 line\n";
            break;
      }
   }
   catch (...)
   {
      cout << "ERROR: Unexpected exception was thrown.\n";
   }

   return 0;
}
